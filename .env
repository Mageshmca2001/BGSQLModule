PORT=8000
DB_CONNECTION=sqlsrv
DB_HOST=192.168.29.7
DB_PORT=1433
DB_DATABASE=MageshDB
DB_USER=sa
DB_PASSWORD=sa
JWT_SECRET=your_jwt_secret_here


NODE_ENV=true


export const getTodayYesterdayDataCombined = async (req, res) => {
try {
// Get today's and yesterday's dates
const today = new Date();
const yesterday = new Date(today);
yesterday.setDate(today.getDate() - 1);

// Format dates as 'YYYY-MM-DD'
const formatDate = (date) => date.toISOString().split('T')[0];
const todayStr = formatDate(today);
const yesterdayStr = formatDate(yesterday);

// List of stored procedures to call
const procedures = [
{ name: 'ShiftWiseSummary', sp: 'SP_GetCountPerDay_DashboardResultDetails' }
];

const pool = await poolPromise;

// Final structure
const results = {
today: {},
yesterday: {}
};

for (const proc of procedures) {
// === Get today's data
const todayResult = await pool
.request()
.input('InputDateTime', todayStr)
.execute(proc.sp);

// === Get yesterday's data
const yesterdayResult = await pool
.request()
.input('InputDateTime', yesterdayStr)
.execute(proc.sp);

// Store both full recordset and only-passed recordset
results.today[proc.name] = {
full: todayResult.recordset || [],
onlyPass: todayResult.recordsets[1]?.[0] || {}
};

results.yesterday[proc.name] = {
full: yesterdayResult.recordset || [],
onlyPass: yesterdayResult.recordsets[1]?.[0] || {}
};
}

// Return final response
return res.status(200).json({
success: true,
today: todayStr,
yesterday: yesterdayStr,
data: results
});

} catch (error) {
console.error('Error in getTodayYesterdayDataCombined:', error);
return res.status(500).json({
success: false,
message: 'Error retrieving data from stored procedures',
error: error.message
});
}
};